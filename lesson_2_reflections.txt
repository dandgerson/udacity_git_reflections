1. What happens when you initialize a repository? Why do you need to do it?

	When i did initialized a repository, The Git created a .git folder and did start version-control system. Now i can commit my changes and add untracking files. That is why i need to initialize a repository.

2. How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is more easy get changing and do not writing in the history. The staging area is very usefull to doing commits more carefull.

3. How can you use the staging area to make sure you have one commit per logical change?

	If i want to make sure, that i have one commit per logical change, I just type git status. If i was did a commit the line will contain the message that the branch chain is update.

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	It would be when need translate to other languages or integrate a new experimental feature, or get new variant of scenario of the poem. The brenches making a project more organized and flexibillity.

5. How do the diagrams help you visualize the branch structure?

	The diagrams is very helpfull and usefull when we have to more deeply and completely understand difficalt and big repositories with many contributors, commits history and a lot of branchess, additionally the visualize helping with understanding reachable commits and when we need to create new branch, when it is neccessary.

6. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

7. What are the pros and cons of Git's automatic merging vs. always doing merges manually?
